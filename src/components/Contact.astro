<div class="relative px-6 md:px-24 lg:px-48 xl:px-64 2xl:px-96 w-full h-screen flex flex-col items-end justify-end gap-8 py-8">
  <div class="flex flex-col">
    <div id="container3" class="outfit flex gap-0 text-4xl mg:text-6xl lg:text-8xl tracking-tighter font-semibold text-wrap">
      <span id="contact" class="text-stone-400"></span>
      <span id="underscore___" class="text-amber-500">_</span>
    </div>
  </div>

  <div class="absolute inset-0 flex items-center justify-center">
    <div class="flex flex-col items-start gap-8">
      <!-- EMAIL -->
      <div class="flex flex-col">
        <span class="text-stone-600">Email</span>
        <a href="mailto:albertcorpmail@gmail.com" class="text-stone-400">albertcorpmail@gmail.com</a>
      </div>

      <!-- PHONE -->
      <div class="flex flex-col">
        <span class="text-stone-600">Phone</span>
        <span class="text-stone-400">+639760592328</span>
      </div>

      <!-- LINKEDIN -->
      <div class="flex flex-col">
        <span class="text-stone-600">LinkedIn</span>
        <a href="https://www.linkedin.com/in/jan-albert-sobreo" class="text-stone-400">www.linkedin.com/in/jan-albert-sobreo</a>
      </div>

      <!-- RESUME -->
      <div class="flex flex-col">
        <span class="text-stone-600">Resume</span>
        <a href="/JAN%20ALBERT%20SOBREO%20-%20CV2.pdf" class="text-stone-400">Download</a>
      </div>
    </div>
  </div>
</div>

<script>
  const under = document.getElementById('underscore___')
  const name = document.getElementById('contact')
  const container = document.getElementById('container3')

  const txt = 'Contact Me'
  let index = 0
  let text = []
  let typingInterval:any
  let blinkInterval:any

  // Function to start the typing animation
  const startTyping = () => {
    if (typingInterval) return; // Prevent multiple intervals
    typingInterval = setInterval(() => {
      if (!name || index >= txt.length) {
        clearInterval(typingInterval)
        return
      }
      text.push(txt.split('')[index])
      index++
      name.innerHTML = text.join('')
    }, 100)
  }

  // Function to start the blinking cursor
  const startBlinking = () => {
    if (blinkInterval) return; // Prevent multiple intervals
    blinkInterval = setInterval(() => {
      if (!under) return
      if (under.classList.contains('text-white/0')) {
        under.classList.remove('text-white/0')
      } else {
        under.classList.add('text-white/0')
      }
    }, 600)
  }

  // Create an Intersection Observer instance
  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        // If the element is in view, start the animations
        startTyping()
        startBlinking()
      } else {
        // If the element is out of view, stop the animations
        clearInterval(typingInterval)
        clearInterval(blinkInterval)
        typingInterval = null
        blinkInterval = null
      }
    })
  })

  // Start observing the container element
  if (container) {
    observer.observe(container)
  }
</script>
